/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package search;

import ConnectionManager.dbConnectionManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mylibrary.BookJDialog;

/**
 *
 * @author Jonathan
 */
public class AuthorJFrame extends javax.swing.JFrame {

    /**
     * Creates new form TitleJFrame
     */
    public AuthorJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchHomeButton = new javax.swing.JButton();
        SearchAuthor = new javax.swing.JButton();
        ClearForm = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SearchAuthorNameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        authorTable = new javax.swing.JTable();
        listAllButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("My Library Title Search");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchHomeButton.setFont(new java.awt.Font("Freestyle Script", 0, 24)); // NOI18N
        searchHomeButton.setText("Search Home");
        searchHomeButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, null, java.awt.Color.black));
        searchHomeButton.setPreferredSize(new java.awt.Dimension(101, 33));
        searchHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchHomeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(searchHomeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 280, 185, 42));

        SearchAuthor.setFont(new java.awt.Font("Freestyle Script", 0, 24)); // NOI18N
        SearchAuthor.setText("List Books");
        SearchAuthor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, null, java.awt.Color.black));
        SearchAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchAuthorActionPerformed(evt);
            }
        });
        getContentPane().add(SearchAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 185, 42));

        ClearForm.setFont(new java.awt.Font("Freestyle Script", 0, 24)); // NOI18N
        ClearForm.setText("Clear");
        ClearForm.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, null, java.awt.Color.black));
        ClearForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearFormActionPerformed(evt);
            }
        });
        getContentPane().add(ClearForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, 185, 42));

        jLabel1.setFont(new java.awt.Font("Freestyle Script", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SEARCH BY AUTHOR");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 381, 51));

        jLabel2.setFont(new java.awt.Font("Freestyle Script", 0, 24)); // NOI18N
        jLabel2.setText("Author Name:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, 54));

        SearchAuthorNameField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SearchAuthorNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchAuthorNameFieldActionPerformed(evt);
            }
        });
        getContentPane().add(SearchAuthorNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 282, -1));

        jLabel3.setText("Â© Creative Native Coding");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 520, -1, 14));

        authorTable.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        authorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(authorTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 593, 162));

        listAllButton.setFont(new java.awt.Font("Freestyle Script", 0, 24)); // NOI18N
        listAllButton.setText("List All");
        listAllButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, null, java.awt.Color.black));
        listAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listAllButtonActionPerformed(evt);
            }
        });
        getContentPane().add(listAllButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, 185, 42));

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchAuthorNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchAuthorNameFieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_SearchAuthorNameFieldActionPerformed

    private void searchHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchHomeButtonActionPerformed
        BookJDialog.main(null);   // open main form
        this.dispose(); //Close this one
    }//GEN-LAST:event_searchHomeButtonActionPerformed

    private void ClearFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearFormActionPerformed
        // TODO add your handling code here:
        SearchAuthorNameField.setText("");
        ((DefaultTableModel) authorTable.getModel()).setRowCount(0);
        SearchAuthorNameField.requestFocus();
    }//GEN-LAST:event_ClearFormActionPerformed

    private void SearchAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchAuthorActionPerformed
        // TODO add your handling code here:
        String authorName = SearchAuthorNameField.getText();
        if ("".equals(SearchAuthorNameField.getText())) {
            JOptionPane.showMessageDialog(null, "Please Enter An AUTHOR NAME!");
        } else {
            String sql = String.format("SELECT * FROM book where AuthorName = " + "'" + authorName + "'");
            if (sql != null && sql.trim().length() > 0) {
                DefaultTableModel tableModel = new DefaultTableModel();

                try {

                    dbConnectionManager.getConnection();

                    java.sql.Statement stmt = dbConnectionManager.getConnection().prepareStatement(sql);
                    stmt.executeQuery(sql);
                    try (ResultSet rs = stmt.getResultSet()) {
                        ResultSetMetaData rsMeta = rs.getMetaData();
                        int colCount = rsMeta.getColumnCount();
                        for (int i = 1; i <= colCount; i++) {
                            tableModel.addColumn(rsMeta.getColumnLabel(i));
                        }
                        while (rs.next()) {
                            String[] rowData = new String[colCount];

                            for (int i = 1; i <= rowData.length; i++) {
                                String colLabel = rsMeta.getColumnLabel(i);
                                String colValue = rs.getString(colLabel);
                                rowData[i - 1] = colValue;
                            }
                            tableModel.addRow(rowData);
                        }
                        authorTable.setModel(tableModel);
                        SearchAuthorNameField.setText("");
                        SearchAuthorNameField.requestFocus();
                        dbConnectionManager.getConnection().close();
                    }

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_SearchAuthorActionPerformed

    private void listAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listAllButtonActionPerformed
        // TODO add your handling code here:
        String sql = String.format("SELECT * FROM book");

        if (sql != null && sql.trim().length() > 0) {
            DefaultTableModel tableModel = new DefaultTableModel();

            try {

                dbConnectionManager.getConnection();

                java.sql.Statement stmt = dbConnectionManager.getConnection().prepareStatement(sql);
                stmt.executeQuery(sql);
                try (ResultSet rs = stmt.getResultSet()) {
                    ResultSetMetaData rsMeta = rs.getMetaData();
                    int colCount = rsMeta.getColumnCount();
                    for (int i = 1; i <= colCount; i++) {
                        tableModel.addColumn(rsMeta.getColumnLabel(i));
                    }
                    while (rs.next()) {
                        String[] rowData = new String[colCount];

                        for (int i = 1; i <= rowData.length; i++) {
                            String colLabel = rsMeta.getColumnLabel(i);
                            String colValue = rs.getString(colLabel);
                            rowData[i - 1] = colValue;
                        }
                        tableModel.addRow(rowData);
                    }
                    authorTable.setModel(tableModel);
                    dbConnectionManager.getConnection().close();
                }

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_listAllButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AuthorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AuthorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AuthorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AuthorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AuthorJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearForm;
    private javax.swing.JButton SearchAuthor;
    private javax.swing.JTextField SearchAuthorNameField;
    private javax.swing.JTable authorTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton listAllButton;
    private javax.swing.JButton searchHomeButton;
    // End of variables declaration//GEN-END:variables
}
